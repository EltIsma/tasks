services:
  app:
    restart: always
    container_name: app
    build: .
    ports:
      - "8090:8090"
    volumes:
      - ./config:/etc/task
    depends_on:
      - postgres
      - kafka

  postgres:
    restart: always
    container_name: postgres
    image: docker.io/bitnami/postgresql:16
    ports:
      - "5432:5432"
    volumes:
      - .data/postgres:/bitnami/postgresql
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5

  kafka-controller:
    image: docker.io/bitnami/kafka:3.7
    container_name: kafka-controller
    ports:
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller
      - KAFKA_CFG_LISTENERS=CONTROLLER://:9093
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    volumes:
      - .data/kafka-controller:/bitnami/kafka/data
      - .config/kafka-controler:/bitnami/kafka/config
    healthcheck:
      test: ["CMD", "kafka-broker-api.sh", "--bootstrap-server", "kafka-controller:9093", "--command", "cluster-id"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  kafka:
    image: docker.io/bitnami/kafka:3.7
    restart: always
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-controller:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - .data/kafka:/bitnami/kafka/data
      - .config/kafka:/bitnami/kafka/config

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9000:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    volumes:
      - .config/kafka-ui/config.yaml:/etc/kafkaui/dynamic_config.yaml